/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import myclass.Connect;
import myclass.TaiKhoan;
/**
 *
 * @author Hunter95
 */
public class frmQLTaiKhoan extends javax.swing.JFrame {
    private Connect conn = null;
    private DefaultTableModel tableModel = new DefaultTableModel();
    /**
     * Creates new form frmQLTaiKhoan
     */
    ResultSet result = null;
    private final TaiKhoan TK = new TaiKhoan();
    
    private boolean isEdit = false;
    
    public void QLAccount() throws SQLException{
        String []colsName = {"Tên tài khoản","Password","Là Admin"};
        tableModel.setColumnIdentifiers(colsName);
        tbvAccount.setModel(tableModel);
        updateData(TK.LoadAllTaiKhoanata());
        
    }
    public void updateData(ResultSet result){
        try {
            while(result.next()){ // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[3];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã sp)
                rows[1] = result.getString(2);
                //rows[2] = 
                if (result.getBoolean(3)){
                    rows[2]= "admin";               
                }
                else{rows[2]= "user"; }
                tableModel.addRow(rows);
                //tableModel.setValueAt(result.getBoolean(3), tableModel.getRowCount()-1, 3);
            }
        } catch (SQLException e) {
            e.printStackTrace();
       }
    }
    public void LoadData(){
         try {
             ResultSet result = TK.LoadAllTaiKhoanata();
            while(result.next()){ // nếu còn đọc tiếp được một dòng dữ liệu
                String rows[] = new String[3];
                rows[0] = result.getString(1); // lấy dữ liệu tại cột số 1 (ứng với mã sp)
                rows[1] = result.getString(2);
                //rows[2] = 
                if (result.getBoolean(3)){
                    rows[2]= "admin";               
                }
                else{rows[2]= "user"; }
                tableModel.addRow(rows);
                //tableModel.setValueAt(result.getBoolean(3), tableModel.getRowCount()-1, 3);
            }
        } catch (SQLException e) {
            e.printStackTrace();
       }
         setupText(true);
         setupButton(true);
    }
    public void ClearData() throws SQLException {
        //Lay chi so dong cuoi cung
        int n = tableModel.getRowCount() - 1;
        for (int i = n; i >= 0; i--) {
            tableModel.removeRow(i);//Remove tung dong
        }
    }
    public boolean isContainSpecialCharacter(String s) {
     Pattern p = Pattern.compile("[^A-Za-z0-9]");
     Matcher m = p.matcher(s);
    // boolean b = m.matches();
     boolean b = m.find();
     if (b == true){
        System.out.println("There is a special character in my string ");
        return true;
     }
     else{
         System.out.println("There is no special char.");
         return false;
     }
 } 
            
    
    public frmQLTaiKhoan() throws SQLException {
        initComponents();
        QLAccount();
        setupText(false);
        setupButton(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbvAccount = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtAccount = new javax.swing.JTextField();
        txtPass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxAdmin = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnNonSave = new javax.swing.JButton();

        jButton1.setText("De");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lí Tài Khoản");
        setBackground(new java.awt.Color(204, 255, 204));

        jLabel2.setText("Danh sách tài khoản");

        tbvAccount.setBackground(new java.awt.Color(153, 204, 255));
        tbvAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tbvAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbvAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbvAccount);

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Chi tiết"));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Tên Tài Khoản");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Password");

        jLabel5.setText("Quyền Admin");

        cbxAdmin.setBackground(new java.awt.Color(153, 204, 255));
        cbxAdmin.setText("Admin");

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Quản lý tài khoản"));

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnClear.setText("Xóa");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Thoát");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnNonSave.setText("Không Lưu");
        btnNonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnAdd)
                .addGap(27, 27, 27)
                .addComponent(btnEdit)
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addGap(23, 23, 23)
                .addComponent(btnSave)
                .addGap(18, 18, 18)
                .addComponent(btnNonSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnClear)
                    .addComponent(btnExit)
                    .addComponent(btnSave)
                    .addComponent(btnNonSave))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(39, 39, 39)
                        .addComponent(cbxAdmin))
                    .addComponent(jLabel4)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbxAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int exit = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát không?", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (exit == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void tbvAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbvAccountMouseClicked
        // TODO add your handling code here:
        String s[];
        //s = tbvAccount.getSelectionModel().;
        txtAccount.setText((String) tbvAccount.getValueAt(tbvAccount.getSelectedRow(),0));
        txtPass.setText((String) tbvAccount.getValueAt(tbvAccount.getSelectedRow(),1));
        if ((String) tbvAccount.getValueAt(tbvAccount.getSelectedRow(),2) == "admin"){
            cbxAdmin.setSelected(true);
        }else{
            cbxAdmin.setSelected(false);
        }
    }//GEN-LAST:event_tbvAccountMouseClicked
    public void setup(){
        txtAccount.setText("");
        txtPass.setText("");
        cbxAdmin.setSelected(false);
        txtAccount.requestFocus();
    }
    public void setupButton(boolean c){
        //btnNonSave.isVisible() = true;
        btnAdd.setEnabled(c);
        btnClear.setEnabled(c);
        btnEdit.setEnabled(c);
        btnExit.setEnabled(c);
        btnSave.setEnabled(!c);
        btnNonSave.setEnabled(!c);
    }
    public void setupText(boolean c){
        txtAccount.setEditable(c);
        txtPass.setEditable(c);
        //cbxAdmin.isEnabled();
        cbxAdmin.setEnabled(c);
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        setupButton(false);
        setup();
        isEdit = false;
        setupText(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String acc = txtAccount.getText();
        String pass = txtPass.getText();
        if(pass.length() == 0|| acc.length()==0){
            JOptionPane.showConfirmDialog(null, "Bạn nhập đầy đủ thông tin đi", "Sai định dạng password", JOptionPane.OK_OPTION);
        }
        else{
        
            if (isContainSpecialCharacter(pass) || pass.length() > 15){
                JOptionPane.showConfirmDialog(null, "Bạn nhập lại password đi?", "Sai định dạng password", JOptionPane.OK_OPTION);
                setup();
            }
            if (isContainSpecialCharacter(acc) || acc.length() > 15){
                JOptionPane.showConfirmDialog(null, "Bạn nhập lại tên tài khoản đi?", "Sai định dạng Tên Tài Khoản", JOptionPane.OK_OPTION);
                setup();
            }
            else{
                if(!isEdit){
                    try {
                        TK.InsertTaiKhoan(acc, pass, cbxAdmin.isSelected());
                    } catch (SQLException ex) {
                        Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try {
                        TK.EditTaiKhoan(tbvAccount.getValueAt(tbvAccount.getSelectedRow(),0).toString(),acc, pass,cbxAdmin.isSelected());
                    } catch (SQLException ex) {
                        Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                try {
                    ClearData(); //goi ham xoa du lieu tron tableModel
                } catch (SQLException ex) {
                    Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                }
                LoadData();
                setup();
                setupText(false);
                setupButton(true);
            }
        }
        
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        String s = txtAccount.getText();
        String x = txtPass.getText();
        if (s == ""){
            JOptionPane.showConfirmDialog(null, "Bạn chọn tên tài khoản đi?", "Thông báo", JOptionPane.OK_OPTION);
        }
        if (x == ""){
            JOptionPane.showConfirmDialog(null, "Bạn nhập Password đi?", "Thông báo", JOptionPane.OK_OPTION);
        }else{
            setupButton(false);
            isEdit = true;
            setupText(true);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        String s = txtAccount.getText();
        if (s != ""){
            try {
                TK.DeleteTaiKhoanByUsername(s);
            } catch (SQLException ex) {
                Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                ClearData();
            } catch (SQLException ex) {
                Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
            LoadData();
            setup();
            setupText(false);
            setupButton(true);
        }else{
            JOptionPane.showConfirmDialog(null, "Bạn chọn tài khoản để xóa đi?", "Thông báo", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnNonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNonSaveActionPerformed
            setup();
            setupText(false);
            setupButton(true);
    }//GEN-LAST:event_btnNonSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmQLTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmQLTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmQLTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmQLTaiKhoan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new frmQLTaiKhoan().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(frmQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNonSave;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbxAdmin;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbvAccount;
    private javax.swing.JTextField txtAccount;
    private javax.swing.JTextField txtPass;
    // End of variables declaration//GEN-END:variables
}
