/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import com.sun.javafx.scene.EnteredExitedHandler;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.KeyCode;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.table.DefaultTableModel;
import myclass.Ban;
import myclass.HDTam;
import myclass.HoaDon;
import myclass.MatHang;
import myclass.Product;

/**
 *
 * @author Hunter95
 */
public class frmHoaDonTinhTien extends javax.swing.JFrame {
    Ban ban = new Ban();
    MatHang mathang = new MatHang();
    HDTam hdtam = new HDTam();
    DefaultListModel listTableModel = new DefaultListModel();
    DefaultComboBoxModel<String> comboTableModel = new DefaultComboBoxModel<>();
    DefaultListModel listProductModel = new DefaultListModel();
    DefaultComboBoxModel<Product> comboProductModel = new DefaultComboBoxModel<>();
    DefaultTableModel HD_TamModel = new DefaultTableModel(){
    @Override
    public boolean isCellEditable(int i, int i1) {
        return false; //To change body of generated methods, choose Tools | Templates.
    }
    };
    /**
     * Creates new form frmHoaDonTinhTien
     */
    public frmHoaDonTinhTien() {
        initComponents();
        addListener();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboTable = new javax.swing.JComboBox<>();
        comboProduct_id = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jBtAdd = new javax.swing.JButton();
        jBtEdit = new javax.swing.JButton();
        jBtRemove = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTxtProduct_name = new javax.swing.JTextField();
        jTxtProduct_type = new javax.swing.JTextField();
        jTxtProduct_price = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jSpinnerQuanity = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTable = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableHD_Tam = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jRBPercentDiscount = new javax.swing.JRadioButton();
        jRBVipCardDiscount = new javax.swing.JRadioButton();
        jRBStampCardDiscount = new javax.swing.JRadioButton();
        jRBNoDiscount = new javax.swing.JRadioButton();
        jSpinerPercent = new javax.swing.JSpinner();
        jBtSaveAndPrint = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxtTotalPrice = new javax.swing.JTextField();
        jTxtTax = new javax.swing.JTextField();
        jTxtDiscount = new javax.swing.JTextField();
        jTxtPayment = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListProduct = new javax.swing.JList<>();
        jbtThoat = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(850, 550));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Hóa đơn");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gọi Món"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã Bàn: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Mã Món: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Tên Món:");

        jBtAdd.setText("Thêm");
        jBtAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtAddActionPerformed(evt);
            }
        });

        jBtEdit.setText("Sửa");
        jBtEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtEditActionPerformed(evt);
            }
        });

        jBtRemove.setText("Xóa");
        jBtRemove.setPreferredSize(new java.awt.Dimension(59, 23));
        jBtRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRemoveActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Loại:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Giá Tiền: ");

        jTxtProduct_name.setEditable(false);

        jTxtProduct_type.setEditable(false);

        jTxtProduct_price.setEditable(false);
        jTxtProduct_price.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Số lượng:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(comboProduct_id, javax.swing.GroupLayout.Alignment.LEADING, 0, 113, Short.MAX_VALUE)
                        .addComponent(comboTable, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtProduct_name))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTxtProduct_price, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinnerQuanity, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                            .addComponent(jTxtProduct_type)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtProduct_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboProduct_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtProduct_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtAdd)
                    .addComponent(jBtEdit)
                    .addComponent(jBtRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTxtProduct_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jSpinnerQuanity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Bàn"));

        jScrollPane1.setViewportView(listTable);

        jTableHD_Tam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableHD_Tam);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Khuyến Mãi"));

        buttonGroup1.add(jRBPercentDiscount);
        jRBPercentDiscount.setText("Theo Phần Trăm");

        buttonGroup1.add(jRBVipCardDiscount);
        jRBVipCardDiscount.setText("Thẻ Vip");

        buttonGroup1.add(jRBStampCardDiscount);
        jRBStampCardDiscount.setText("Thẻ KM");

        buttonGroup1.add(jRBNoDiscount);
        jRBNoDiscount.setSelected(true);
        jRBNoDiscount.setText("Không KM");

        jSpinerPercent.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jRBPercentDiscount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinerPercent))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jRBVipCardDiscount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jRBStampCardDiscount)
                        .addGap(26, 26, 26)
                        .addComponent(jRBNoDiscount)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBPercentDiscount)
                    .addComponent(jSpinerPercent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBVipCardDiscount)
                    .addComponent(jRBStampCardDiscount)
                    .addComponent(jRBNoDiscount)))
        );

        jBtSaveAndPrint.setText("Lưu Và In Hóa Đơn");
        jBtSaveAndPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSaveAndPrintActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Tổng: ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Thuế: ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Giảm Giá: ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Thanh Toán: ");

        jtxtTotalPrice.setEditable(false);
        jtxtTotalPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtTotalPrice.setText("0");

        jTxtTax.setEditable(false);
        jTxtTax.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtTax.setText("0");

        jTxtDiscount.setEditable(false);
        jTxtDiscount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtDiscount.setText("0");

        jTxtPayment.setEditable(false);
        jTxtPayment.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtPayment.setText("0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtSaveAndPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTxtPayment))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtxtTotalPrice))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTxtDiscount))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTxtTax)))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jtxtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTxtTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTxtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jTxtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtSaveAndPrint, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
            .addComponent(jScrollPane1)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Món"));

        jScrollPane3.setViewportView(jListProduct);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );

        jbtThoat.setText("Thoát");
        jbtThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtThoat, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE))
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtThoatActionPerformed
       this.dispose();
    }//GEN-LAST:event_jbtThoatActionPerformed

    private void jBtAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtAddActionPerformed
        try {
            hdtam.addProductToTable(comboTable.getSelectedItem().toString(),comboProduct_id.getSelectedItem().toString());
            loadHD_TamData();
        } catch (SQLException ex) {
            Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtAddActionPerformed

    private void jBtRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRemoveActionPerformed
       try {
            if(jTableHD_Tam.getSelectedRowCount()<=0)
            {
                showMessage("Vui lòng chọn món cân xóa");
                return;
            }
             int res = JOptionPane.showConfirmDialog(null,"Xóa Món \""+HD_TamModel.getValueAt(jTableHD_Tam.getSelectedRow(), 1) +"\" Trong Bàn \""+comboTable.getSelectedItem().toString()+"\" ?","Xác Nhận",JOptionPane.YES_NO_OPTION);
            if(res==JOptionPane.YES_OPTION)
            {
                hdtam.removeProduct(comboTable.getSelectedItem().toString(),comboProduct_id.getSelectedItem().toString());
                loadHD_TamData();
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtRemoveActionPerformed

    private void jBtEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtEditActionPerformed
           try {
            if(jTableHD_Tam.getSelectedRowCount()<=0)
            {
                showMessage("Vui lòng chọn món cân sửa");
                return;
            }
            hdtam.changeProductQuanity(comboTable.getSelectedItem().toString(),comboProduct_id.getSelectedItem().toString(),(int)jSpinnerQuanity.getValue());         
            loadHD_TamData();
        } catch (SQLException ex) {
            Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtEditActionPerformed

    private void jBtSaveAndPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSaveAndPrintActionPerformed
        try {
            int res = JOptionPane.showConfirmDialog(null, "Lưu Và In Hóa Đơn Này ?", "Xác Nhận",JOptionPane.YES_NO_OPTION);
            if(res!=JOptionPane.YES_OPTION)
            {
                return;
            }
            HoaDon hd = new HoaDon();
            double total = Double.valueOf(jtxtTotalPrice.getText().replace(",",""));
            double discount = Double.valueOf(jTxtDiscount.getText().replace(",",""));
            double payment = Double.valueOf(jTxtPayment.getText().replace(",",""));
            double tax = Double.valueOf(jTxtTax.getText().replace(",",""));
            String tableid = comboTable.getSelectedItem().toString();
            hd.insertHoaDon(total, discount, tax, payment, tableid);
            int invoiceid = hd.getLatestId();
            for(int i = 0 ; i<=jTableHD_Tam.getRowCount()-1;i++)
            {
                String productid = (String)jTableHD_Tam.getValueAt(i,0);
                double price = Double.valueOf(jTableHD_Tam.getValueAt(i,2).toString());
                int quanity =  Integer.valueOf(jTableHD_Tam.getValueAt(i,3).toString());
                hd.insertCT_HD(invoiceid, productid, quanity, price);
            }
            hdtam.deleteHD_TamByTable(tableid);
            loadHD_TamData();
            hd.printInVoice(invoiceid);
        } catch (SQLException ex) {
            Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtSaveAndPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmHoaDonTinhTien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> comboProduct_id;
    private javax.swing.JComboBox<String> comboTable;
    private javax.swing.JButton jBtAdd;
    private javax.swing.JButton jBtEdit;
    private javax.swing.JButton jBtRemove;
    private javax.swing.JButton jBtSaveAndPrint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListProduct;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRBNoDiscount;
    private javax.swing.JRadioButton jRBPercentDiscount;
    private javax.swing.JRadioButton jRBStampCardDiscount;
    private javax.swing.JRadioButton jRBVipCardDiscount;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinerPercent;
    private javax.swing.JSpinner jSpinnerQuanity;
    private javax.swing.JTable jTableHD_Tam;
    private javax.swing.JTextField jTxtDiscount;
    private javax.swing.JTextField jTxtPayment;
    private javax.swing.JTextField jTxtProduct_name;
    private javax.swing.JTextField jTxtProduct_price;
    private javax.swing.JTextField jTxtProduct_type;
    private javax.swing.JTextField jTxtTax;
    private javax.swing.JButton jbtThoat;
    private javax.swing.JTextField jtxtTotalPrice;
    private javax.swing.JList<String> listTable;
    // End of variables declaration//GEN-END:variables

    private void loadData() {
        try {
            LoadJTable();
            LoadTableData();
            LoadProductData();
        } catch (SQLException ex) {
            showMessage("Có lỗi"+ex.getMessage());
        }
    }

    private void showMessage(String msg) {
            JOptionPane.showMessageDialog(null,msg);  
    }

    private void LoadTableData() throws SQLException {
            listTableModel.clear();
            comboTableModel.removeAllElements();
            ResultSet res = ban.LoadAllBanData();
            while(res.next())
            {
                listTableModel.addElement(res.getString(1));
                comboTableModel.addElement(res.getString(1));
            }
            comboTable.setModel(comboTableModel);
            listTable.setModel(listTableModel);
            listTable.setSelectedIndex(0);
            comboTable.setSelectedIndex(0);          
    }

    private void LoadProductData() throws SQLException {
            listProductModel.clear();
            comboProductModel.removeAllElements();
             ResultSet res = mathang.LoadAllMatHangData();
            while(res.next())
            {
                Product item = new Product(res.getString(1), res.getNString(2), res.getNString(4), res.getDouble(3));
                comboProductModel.addElement(item);
                comboProduct_id.addItem(item.getID());
                listProductModel.addElement(item.getName());
            }
            jListProduct.setModel(listProductModel);
            jListProduct.setSelectedIndex(0);
            loadHD_TamData();
            
    }

    private void LoadJTable() {
            String []colsName = {"Id Món","Tên Món","Đơn Giá","Số Lượng","Thành Tiền"};
            HD_TamModel.setColumnIdentifiers(colsName);
            jTableHD_Tam.setModel(HD_TamModel);
    }

    private void addListener() {
            comboTable.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                   if (e.getStateChange() == ItemEvent.SELECTED) {
                       loadHD_TamData();
                        
                    }   }
            });
            comboProduct_id.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                    if (e.getStateChange() == ItemEvent.SELECTED) {
                        String product_id = (String) e.getItem();
                        Product selected_product = comboProductModel.getElementAt(comboProduct_id.getSelectedIndex());
                        jTxtProduct_name.setText(selected_product.getName());
                        jTxtProduct_price.setText(String.format("%,.0f",selected_product.getPrice()));
                        jTxtProduct_type.setText(selected_product.getType());
                        jSpinnerQuanity.setValue(1);
                    }
                }
            });
            listTable.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                  int index = ((JList)e.getSource()).getSelectedIndex();
                    comboTable.setSelectedIndex(index);
                }
            });
            jListProduct.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    int index = ((JList)e.getSource()).getSelectedIndex();
                    comboProduct_id.setSelectedIndex(index);    
                }
            } );
            jRBNoDiscount.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                   if(e.getStateChange()==ItemEvent.SELECTED)   
                   {
                       jSpinerPercent.setEnabled(false);
                       jSpinerPercent.setValue(0);
                       jTxtDiscount.setText("0");
                       calculatePayment();
                   }
                }
            });
            jRBVipCardDiscount.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                   if(e.getStateChange()==ItemEvent.SELECTED)   
                   {
                       jSpinerPercent.setEnabled(false);
                       jSpinerPercent.setValue(0);
                       double discount = 10 * (Double.valueOf(jtxtTotalPrice.getText().replace(",", ""))+Double.valueOf(jTxtTax.getText().replace(",", ""))) / 100;
                       jTxtDiscount.setText(String.format("%,.0f",discount));
                       calculatePayment();
                   }
                }
            });
            jRBStampCardDiscount.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                   if(e.getStateChange()==ItemEvent.SELECTED)   
                   {
                       jSpinerPercent.setEnabled(false);
                       jSpinerPercent.setValue(0);
                       jTxtDiscount.setText(String.format("%,.0f",(double) 130000));
                       calculatePayment();
                   }
                }
            });
            jRBPercentDiscount.addItemListener(new ItemListener() {
                @Override
                public void itemStateChanged(ItemEvent e) {
                   if(e.getStateChange()==ItemEvent.SELECTED)   
                   {
                       jSpinerPercent.setEnabled(true);
                       jSpinerPercent.requestFocus();
                       calculatePayment();
                   }
                }
            });
            jSpinnerQuanity.setModel(new SpinnerNumberModel(1, 1, 100, 1));
            SpinnerNumberModel m_numberSpinnerModel;
            m_numberSpinnerModel = new SpinnerNumberModel(0, 0, 100, 1);
            jSpinerPercent.setModel(m_numberSpinnerModel);
            jSpinerPercent.addChangeListener(new ChangeListener() {                
                @Override
                public void stateChanged(ChangeEvent e) {
                     int percent = (int) jSpinerPercent.getValue();
                     double discount = percent * (Double.valueOf(jtxtTotalPrice.getText())+Double.valueOf(jTxtTax.getText())) / 100;
                     jTxtDiscount.setText(String.format("%,.0f",discount));
                     calculatePayment();
                }
            });
            jTableHD_Tam.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent lse) {
                    if (!lse.getValueIsAdjusting()) {
                        if(jTableHD_Tam.getSelectedRow()==-1)
                        {
                            return;
                        }
                        int rowcount = jTableHD_Tam.getRowCount();
                        int selectedrow = jTableHD_Tam.getSelectedRow();
                        String productid = jTableHD_Tam.getValueAt(jTableHD_Tam.getSelectedRow(),0).toString();
                        for(int i = 0 ; i<comboProduct_id.getItemCount();i++)
                        {
                            String id = comboProduct_id.getItemAt(i);
                            if(productid.trim().compareTo(id.trim())==0)
                            {
                                comboProduct_id.setSelectedIndex(i);
                            }
                            jSpinnerQuanity.setValue(Integer.valueOf(jTableHD_Tam.getValueAt(jTableHD_Tam.getSelectedRow(),3).toString()));
                        }
                    }
                }
});
 
    }
    public void calculatePayment()
    {
        double discount = Double.valueOf(jTxtDiscount.getText().replace(",", ""));
        String test = jtxtTotalPrice.getText().replace(",", "");
        double total = Double.valueOf(jtxtTotalPrice.getText().replace(",", ""));
        double tax = Double.valueOf(jTxtTax.getText().replace(",", ""));
        double payment = total + tax - discount;
        if(payment<0)
        {
            payment=0;
        }
        jTxtPayment.setText(String.format("%,.0f",payment));
    }
    
    public void loadHD_TamData()
    {
        try {
                           jTableHD_Tam.clearSelection();
                           jTableHD_Tam.getSelectionModel().clearSelection();
                           double total = 0 ;
                           double tax,payment;
                           HD_TamModel.setRowCount(0);
                           String tableId = (String) comboTable.getSelectedItem();
                           ResultSet res = hdtam.getHD_TamByTable(tableId);
                           while(res.next())
                           {
                               String rows[] = new String[5];
                               rows[0]=res.getString(1);
                               rows[1]=res.getString(2);
                               rows[2]=res.getString(4);
                               rows[3]=res.getString(3);
                               rows[4]=res.getString(5);
                               total+= res.getDouble(5);
                               HD_TamModel.addRow(rows);
                           }
                           tax = 10*total/100;
                           jtxtTotalPrice.setText(String.format("%,.0f",total));
                           jTxtTax.setText(String.format("%,.0f",tax));
                           if(!jRBNoDiscount.isSelected())
                           {
                               jRBNoDiscount.setSelected(true);
                           }
                           calculatePayment();
                       } catch (SQLException ex) {
                           Logger.getLogger(frmHoaDonTinhTien.class.getName()).log(Level.SEVERE, null, ex);
                       }
    }
}
